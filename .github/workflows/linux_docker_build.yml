name: Linux-based Building and Unit Tests
on: push

jobs:
  linux-gradle-builder:
    name:
    runs-on: ubuntu-latest
    continue-on-error: false # set to true for debugging
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Launch container
        shell: bash
        run: |
          echo "Authenticate to ghcr"
          echo ${{ secrets.PKG_PWD }} | docker login ghcr.io -u $ --password-stdin
          mkdir -p /tmp/hirs-builders/centos7/
          echo "Launch the container"
          ./.github/docker/scripts/control/run-centos7-gradle.sh
      - name: Build and Unit Test
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-gradle-build.sh
      - name: Package
        id: linux_gradle_package
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-gradle-package.sh
      - name: Copy build logs to runner
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-copy-logs-gradle.sh
      - name: Upload logs
        uses: actions/upload-artifact@v3
        with:
          name: gradle-logs.zip
          path: /tmp/hirs-builders/centos7/*.log
      - name: Copy artifacts to runner
        if: steps.linux_gradle_package.outcome == 'success'
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-copy-artifacts-gradle.sh
      - name: Stop container
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/stop-centos7-gradle.sh
      - name: Upload ACA Artifact
        if: steps.linux_gradle_package.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: HIRS_AttestationCA.rpm
          path: /tmp/hirs-builders/centos7/*Att*el7*
      - name: Upload Provisioner Artifact
        if: steps.linux_gradle_package.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: HIRS_Provisioner_TPM_2_0.rpm
          path: /tmp/hirs-builders/centos7/*Prov*2_0*el7*
      - name: Setup tmate session on error
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 5 # The ssh session will be available for 5 minutes.
        with:
          limit-access-to-actor: true # Only the person who pushed can access- with a github-registered key.

  linux-dotnet-builder:
    name:
    runs-on: ubuntu-latest
    continue-on-error: false # set to true for debugging
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Launch container
        shell: bash
        run: |
          echo "Authenticate to ghcr"
          echo ${{ secrets.PKG_PWD }} | docker login ghcr.io -u $ --password-stdin
          mkdir -p /tmp/hirs-builders/centos7/
          echo "Launch the container"
          ./.github/docker/scripts/control/run-centos7-dotnet.sh
      - name: Build x64 Linux
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-build-linux.sh
      - name: Test x64 Linux
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-test-linux.sh
      - name: Build x64 Windows
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-build-win.sh
      - name: Test x64 Windows
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-test-win.sh
      - name: Package rpm
        id: linux_dotnet_package_rpm
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-package-rpm.sh
      - name: Package deb
        id: linux_dotnet_package_deb
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-package-deb.sh
      - name: Package zip for Windows
        id: linux_dotnet_package_zip_win
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-package-zip-win.sh
      - name: Package zip for Linux
        id: linux_dotnet_package_zip_linux
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-dotnet-package-zip-linux.sh
      - name: Copy build logs to runner
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-copy-logs-dotnet.sh
      - name: Upload logs
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-logs.zip
          path: /tmp/hirs-builders/centos7/*.log
          if-no-files-found: ignore
      - name: Copy artifacts to runner
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/exec-centos7-copy-artifacts-dotnet.sh 
      - name: Stop container
        shell: bash
        run: |
          docker ps
          ./.github/docker/scripts/control/stop-centos7-dotnet.sh
      - name: Upload RPM
        if: steps.linux_dotnet_package_rpm.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: hirs.rpm
          path: /tmp/hirs-builders/centos7/hirs*rpm
      - name: Upload Deb
        if: steps.linux_dotnet_package_deb.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: hirs.deb
          path: /tmp/hirs-builders/centos7/hirs*deb
      - name: Upload zip for Windows
        if: steps.linux_dotnet_package_zip_win.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: hirs.windows.zip
          path: /tmp/hirs-builders/centos7/hirs*win*zip
      - name: Upload zip for Linux
        if: steps.linux_dotnet_package_zip_linux.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: hirs.linux.zip
          path: /tmp/hirs-builders/centos7/hirs*linux*zip
      - name: Setup tmate session on error
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 5 # The ssh session will be available for 5 minutes.
        with:
          limit-access-to-actor: true # Only the person who pushed can access- with a github-registered key.

