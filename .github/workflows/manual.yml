name: Manual
on:
  workflow_dispatch:
    inputs:
      provisioner_run_id:
        description: 'Workflow Run ID to search for a provisioner install package'
        required: true
        type: string
      provisioner_package_name:
        description: 'Filename of the provisioner package saved under the Run ID'
        required: true
        type: string
      client_os:
        description: 'Select the OS to install the provisioner'
        required: true
        type: choice
        options:
          - CentOS7
          - Windows
      aca_run_id:
        description: 'Workflow Run ID to search for an aca install package'
        type: string
      aca_package_name:
        description: 'Filename of the aca package saved under the Run ID'
        type: string
      aca_os:
        description: 'Select the OS to install the ACA'
        required: true
        type: choice
        options:
          - CentOS7
          - PreBuilt
          
jobs:
  launch-ci:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - name: Print options
        shell: bash
        run: |
          echo "Provisioner run id is \"${{ inputs.provisioner_run_id }}\""
          echo "Provisioner package name is \"${{ inputs.provisioner_package_name }}\""
          echo "Client OS is \"${{ inputs.client_os }}\""
          echo "ACA run id is \"${{ inputs.aca_run_id }}\""
          echo "ACA package name is \"${{ inputs.aca_package_name }}\""
          echo "ACA OS is \"${{ inputs.aca_os }}\""
          
      - name: Set up workspace
        shell: bash
        run: |
          mkdir downloads
          mkdir installers
          mkdir logs
          mkdir work
          cd work
          tee -a .env << END
          HIRS_CI_DOWNLOADS_DIR=../downloads
          HIRS_CI_INSTALLERS_DIR=../installers
          HIRS_CI_LOGS_DIR=../logs
          HIRS_CI_WORK_DIR=../work

          HIRS_ACA_PORTAL_PORT=8443

          END
          tee -a compose.yml << END
          version: "3.1"

          services:
              aca:
                image: <ACA_OS_IMAGE>
                command:
                  - /bin/bash
                  - -c
                  - |
                    tail -f /dev/null
                volumes:
                  - \${HIRS_CI_LOGS_DIR}:\${HIRS_CI_LOGS_DIR}
                ports:
                  - "\${HIRS_ACA_PORTAL_PORT}:\${HIRS_ACA_PORTAL_PORT}"
                env_file:
                  - .env
              provisioner:
                image: <PROVISIONER_OS_IMAGE>
                command:
                  - /bin/bash
                  - -c
                  - |
                    tail -f /dev/null
                volumes:
                  - \${HIRS_CI_LOGS_DIR}:\${HIRS_CI_LOGS_DIR}
                env_file:
                  - .env
          END
          
      - name: Download the provisioner install package, if specified
        id: download-artifact-provisioner
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ inputs.provisioner_run_id }}
          name: ${{ inputs.provisioner_package_name }}
          path: downloads
          
      - name: Rename provisioner package
        shell: bash
        run: | 
          cd downloads
          mv ./* ../installers/provisioner
      
      - name: Download the aca install package, if specified
        id: download-artifact-aca
        if: ${{ inputs.aca_run_id && inputs.aca_package_name }} # if not empty
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ inputs.aca_run_id }}
          name: ${{ inputs.aca_package_name }}
          path: downloads
          
      - name: Rename aca package
        if: ${{ inputs.aca_run_id && inputs.aca_package_name }} # if not empty
        shell: bash
        run: | 
          cd downloads
          mv ./* ../installers/aca
          
      - name: Update compose with client image selection
        shell: bash
        run: | 
          client_os_option="${{ inputs.client_os }}"
          client_os_image=""
          if [ $client_os_option = "CentOS7" ]; then
            client_os_image="centos7"
          else
            echo "::warning Unsupported client_os option."
            exit 1
          fi
          sed -i -e "s/<PROVISIONER_OS_IMAGE>/$client_os_image/g" work/compose.yml	
                    
      - name: Update compose with aca image selection
        shell: bash
        run: | 
          aca_os_option="${{ inputs.aca_os }}"
          aca_os_image="ghcr.io\\/nsacyber\\/hirs\\/aca-centos7"
          if [ $aca_os_option = "CentOS7" ]; then
            aca_os_image="centos7"
          else
            echo "::warning Using the pre-built ACA image."
          fi
          sed -i -e "s/<ACA_OS_IMAGE>/$aca_os_image/g" work/compose.yml	
          
      - name: Launch docker compose
        shell: bash
        run: |
          #docker compose -f ./compose.yml up
          echo "Normally docker compose would launch the containers. Instead print the compose file."
          cat work/compose.yml
          ls -alR downloads
          ls -alR installers
          ls -alR logs
          ls -alR work
          
      - name: Setup tmate session on error
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 5 # The ssh session will be available for 5 minutes.
        with:
          limit-access-to-actor: true # Only the person who pushed can access- with a github-registered key.
          
          
