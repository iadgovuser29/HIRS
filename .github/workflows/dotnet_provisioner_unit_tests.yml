name: Dotnet Provisioner Unit Tests
on: push
env: 
  DOTNET_VERSION: '3.1'
jobs:
  dotnet_provisioner_unit_tests:
    name: UnitTests
    # continue-on-error: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
         - os: windows-2022
         - os: ubuntu-20.04
         - os: windows-2019
         - os: ubuntu-18.04
    steps:
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: Checkout repo
      if: always()
      uses: actions/checkout@v2
    
    - name: Restore Project
      working-directory: HIRS_Provisioner.NET
      if: always()
      run: |
        dotnet restore

    - name: Build on Windows
      working-directory: HIRS_Provisioner.NET
      if: contains(matrix.os, 'windows') && always()
      run: |
        cd hirs
        dotnet build /p:RuntimeIdentifier=win-x64 --configuration Release --no-restore
        cd ..
        
    - name: Build on Ubuntu
      working-directory: HIRS_Provisioner.NET
      if: contains(matrix.os, 'ubuntu') && always()
      run: |
          dotnet build --configuration Release --no-restore

    - name: Run Unit Tests and Save Logs - Windows
      id: window_result
      if: contains(matrix.os, 'windows') && always()
      # continue-on-error: true
      working-directory: HIRS_Provisioner.NET
      run: |
        $logName = '${{matrix.os}}-unit-tests.log'
        $results = dotnet test /p:PublishSingleFile=false --no-restore -v m
        New-Item $logName
        Set-Content $logName $results
        Get-Content $logName
        $results = [string]$results
        $results = $results.Contains("Passed!")
        if($results) { $results = "True" } else { $results = "False"}
        echo "::set-output name=result::$results"

    - name: Run Unit Tests and Save Logs - Ubuntu
      if: contains(matrix.os, 'ubuntu') && always()
      # continue-on-error: true
      working-directory: HIRS_Provisioner.NET
      run: |
        logName="${{matrix.os}}-unit-tests.log"
        dotnet test --no-restore -v m > $logName

    - name: Extract Ubuntu Unit Test Results
      id: ubuntu_result
      if: contains(matrix.os, 'ubuntu') && always()
      working-directory: HIRS_Provisioner.NET
      run: |
        logName="${{matrix.os}}-unit-tests.log"
        if grep -Fxq "Passed!" $logName; 
        then 
          echo "Hit pass for ubuntu"
          result="True"
        else
          result="False"
        fi
        echo "::set-output name=result::$result"
        more $logName
        
    - name: Upload logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: "${{matrix.os}}-unit-tests.log"
        path: HIRS_Provisioner.NET/*.log

    - name: Results Passed
      if: (steps.window_result.outputs.result == 'True' || steps.ubuntu_result.outputs.result == 'True') && always()
      run: |
        echo "All Tests Passed"
        exit 0


    - name: Results Failed
      if: (steps.window_result.outputs.result == 'False' || steps.ubuntu_result.outputs.result == 'False') && always()
      run: |
        echo "Unit Tests Failed"
        exit 1


  evaluator:
    runs-on: windows-latest
    needs: [UnitTests (windows-2022),UnitTests (ubuntu-20.04),UnitTests (windows-2019),UnitTests (ubuntu-18.04)]
    steps:
    - name: Set git to use LF
      run: |
        echo "Finished"
