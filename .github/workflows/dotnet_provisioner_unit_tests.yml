name: Dotnet Provisioner Unit Tests
on: push
env: 
  DOTNET_VERSION: '3.1'
jobs:
  dotnet_provisioner_unit_tests:
    name: Restore and run unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
         - os: windows-2022
         - os: ubuntu-20.04
         - os: windows-2019
         - os: ubuntu-18.04
    steps:
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - uses: actions/checkout@v2
    
    - name: Install dependencies
      working-directory: HIRS_Provisioner.NET
      run: |
        dotnet restore

    - name: Build on Windows
      working-directory: HIRS_Provisioner.NET
      if: contains(matrix.os, 'windows')
      run: |
        #dotnet publish -r win-x64 -c Release --no-restore
        cd hirs
        dotnet build /p:RuntimeIdentifier=win-x64 --configuration Release --no-restore
        cd ..
        
    - name: Build on Ubuntu
      working-directory: HIRS_Provisioner.NET
      if: contains(matrix.os, 'ubuntu')
      run: |
          dotnet build --configuration Release --no-restore

    - name: Run Unit Tests and Save Logs Windows
      id: window_result
      if: contains(matrix.os, 'windows')
      continue-on-error: true
      working-directory: HIRS_Provisioner.NET
      run: |

        $logName = '${{matrix.os}}-unit-tests.log'
        echo $logName
        # cd hirsTest
        $results = dotnet test -r win-x64 --no-restore -v m
        # cd ..
        
        New-Item $logName
        Set-Content $logName $results
        Get-Content $logName
        $results = [string]$results
        $results = $results.Contains("Passed!")
        if($results) { $results = "True" } else { $results = "False"}
        echo "::set-output name=result::$results"

    - name: Run Unit Tests and Save Logs Ubuntu
      if: contains(matrix.os, 'ubuntu')
      continue-on-error: true
      working-directory: HIRS_Provisioner.NET
      run: |
        logName="${{matrix.os}}-unit-tests.log"
        dotnet test --no-restore -v m > $logName
        # isInFile=$(cat $logName | grep -c "Passed!")
        # if [ $isInFile -eq 0 ]; then
        #   echo "Tests Failed"
        #   echo "::set-output name=result::'False'"
        # else
        #   echo "Tests Passed"
        #   echo "::set-output name=result::'True'"
        # fi
        # cat $logName

    - name: Extract Ubuntu Unit Test Results
      id: ubuntu_result
      if: contains(matrix.os, 'ubuntu')
      continue-on-error: true
      working-directory: HIRS_Provisioner.NET
      run: |
        isInFile=$(cat $logName | grep -c "Passed!")
        if [ $isInFile -eq 0 ]; then
          echo "Tests Failed"
          echo "::set-output name=result::'False'"
        else
          echo "Tests Passed"
          echo "::set-output name=result::'True'"
        fi
        cat $logName

    - name: Upload logs
      uses: actions/upload-artifact@v2
      with:
        name: "${{matrix.os}}-unit-tests.log"
        path: HIRS_Provisioner.NET/*.log

    - name: Results Passed
      if: steps.window_result.outputs.result == 'True' || steps.ubuntu_result.outputs.result == 'True'
      run: |
        echo "All Tests Passed"
        exit 0

    - name: Results Failed
      if: steps.window_result.outputs.result == 'False' || steps.ubuntu_result.outputs.result == 'False'
      run: |
        echo "Unit Tests Failed"
        exit 1
